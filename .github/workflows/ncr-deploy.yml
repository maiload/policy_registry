name: Deploy to NCR with Policy CLI

on:
  push:
    branches: [ main ]
    paths:
      - 'policies/**'
  workflow_dispatch:

env:
  NCR_REGISTRY: ${{ secrets.NCR_REGISTRY }}
  NCR_REPOSITORY: policy-registry

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Policy CLI via Linuxbrew
        run: |
          echo "Installing Policy CLI via Linuxbrew..."

          # Homebrew/Linuxbrew 설치 (GitHub Actions Ubuntu runner에 이미 설치되어 있음)
          # PATH 설정
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH
          export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"

          # Homebrew 업데이트
          brew update

          # opcr-io tap 추가
          brew tap opcr-io/tap

          # Policy CLI 설치
          brew install opcr-io/tap/policy

          # 버전 확인
          policy version

          echo "✅ Policy CLI installed successfully via Linuxbrew"

      - name: Login to NCR
        run: |
          echo "Logging in to NCR..."
          
          # Policy CLI로 NCR 로그인
          policy login \
            -s ${{ env.NCR_REGISTRY }} \
            -u ${{ secrets.NCR_ACCESS_KEY }} \
            -p ${{ secrets.NCR_SECRET_KEY }}
          
          echo "✅ Successfully logged in to NCR"

      - name: Build and Push Policy Bundle
        run: |
          echo "Building and pushing policy bundle..."

          # 정책 디렉토리 확인
          if [ ! -d "policies" ]; then
            echo "policies directory not found, creating sample..."
            mkdir -p policies
            cat > policies/example.rego <<EOF
          package example

          default allow = false

          allow {
              input.user == "admin"
          }
          EOF
          fi

          # 정책 파일 목록 표시
          echo "Policy files:"
          ls -la policies/

          # Policy 빌드 (latest 태그만 사용)
          echo "Building policy bundle..."
          policy build policies -t ${{ env.NCR_REGISTRY }}/${{ env.NCR_REPOSITORY }}:latest

          # Policy push
          echo "Pushing policy bundle to NCR..."
          policy push ${{ env.NCR_REGISTRY }}/${{ env.NCR_REPOSITORY }}:latest

          echo "✅ Successfully built and pushed to NCR"
          echo "📦 Registry: ${{ env.NCR_REGISTRY }}"
          echo "📦 Repository: ${{ env.NCR_REPOSITORY }}"
          echo "📦 Tag: latest"

      - name: Verify Deployment
        run: |
          echo "Verifying deployment..."
          
          # Policy pull로 검증
          policy pull ${{ env.NCR_REGISTRY }}/${{ env.NCR_REPOSITORY }}:latest
          
          echo "✅ Deployment verified successfully"

      - name: Create Summary
        if: success()
        run: |
          cat >> $GITHUB_STEP_SUMMARY <<EOF
          ## 📦 Policy Bundle Deployment Summary

          ✅ **Successfully deployed to NHN Cloud Registry**

          ### Deployment Details
          - **Registry**: \`${{ env.NCR_REGISTRY }}\`
          - **Repository**: \`${{ env.NCR_REPOSITORY }}\`
          - **Tag**: \`latest\`
          - **Commit**: \`${{ github.sha }}\`
          
          ### Usage
          
          #### Pull Policy Bundle
          \`\`\`bash
          policy pull ${{ env.NCR_REGISTRY }}/${{ env.NCR_REPOSITORY }}:latest
          \`\`\`
          
          #### Run OPA with Bundle
          \`\`\`bash
          opa run -s --bundle ${{ env.NCR_REGISTRY }}/${{ env.NCR_REPOSITORY }}:latest
          \`\`\`
          
          ### Policy Files Included
          \`\`\`
          $(find policies -name "*.rego" -type f | sort)
          \`\`\`
          EOF

      - name: Handle Failure
        if: failure()
        run: |
          echo "❌ Deployment failed"
          echo "Check the logs above for details"
          
          # 디버그 정보 출력
          echo "Debug Information:"
          echo "- Registry: ${{ env.NCR_REGISTRY }}"
          echo "- Repository: ${{ env.NCR_REPOSITORY }}"
          echo "- Working Directory: $(pwd)"
          echo "- Policy CLI Version: $(policy version 2>&1 || echo 'Not installed')"
          
          exit 1